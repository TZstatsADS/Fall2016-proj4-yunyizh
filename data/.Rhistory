data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
data$birth[i]=birth$weight[data$Chick[i]]
i=i+1
}
train<-data[data$Time %in% c(4,8,12,16,20),]
View(train)
data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
data$birth[i]=birth$weight[data$Chick[i]]
i=i+1
}
View(train)
data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
data$birth[i]=birth$weight[data$Chick[i]]
i=i+1
}
data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
data$birth[i]=birth$weight[data$Chick[i]]
i=i+1
}
data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
train$birth[i]=birth$weight[train$Chick[i]]
i=i+1
}
data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
train$birth[i]=birth$weight[train$Chick[i]]
i=i+1
}
View(train)
## adjust for birth
train1 <- groupedData(weight ~ as.numeric(birth)+as.numeric(Diet) * as.numeric(Time) | Chick, data = train)
fit.cs <-gls(weight ~ birth+Diet * Time, data = train1,corr = corCompSymm(,form= ~ 1|Chick))
summary(fit.cs)
anova(fit.cs)
## adjust for birth
train1 <- groupedData(weight ~ as.numeric(birth)+as.numeric(Diet) * as.numeric(Time) | Chick, data = train)
fit.cs <-gls(weight ~ birth+Diet * Time, data = train1,corr = corCompSymm(,form= ~ 1|Chick))
summary(fit.cs)
anova(fit.cs)
fit.un <-gls(weight ~ Diet * Time, data = train1,
corr = corSymm(form= ~ 1|Chick),
weights=varIdent(form=~1|Time))
summary(fit.un)
anova(fit.un)
library(datasets)
library(nlme)
library(car)
library(datasets)
library(nlme)
library(car)
data<-ChickWeight
train<-data[data$Time %in% c(4,8,12,16,20),]
birth<-data[data$Time==0,]
for (i in 1:240){
train$birth[i]=birth$weight[train$Chick[i]]
i=i+1
}
#par(cex = .6)
interaction.plot(data$Time,data$Diet,data$weight,
ylab = "mean of weight", xlab = "Time", trace.label = "Diet")
###Compound Symmetery
train1 <- groupedData(weight ~ as.numeric(Diet) * as.numeric(Time) | Chick, data = train)
fit.cs <-gls(weight ~ Diet * Time, data = train1,corr = corCompSymm(,form= ~ 1|Chick))
summary(fit.cs)
anova(fit.cs)
##Compound Symmetry
## adjust for birth
fit.cs.adj <-gls(weight ~ birth+Diet * Time, data = train1,corr = corCompSymm(,form= ~ 1|Chick))
anova(fit.cs.adj)
##Unstructured
fit.un <-gls(weight ~ Diet * Time, data = train1,
corr = corSymm(form= ~ 1|Chick),
weights=varIdent(form=~1|Time))
summary(fit.un)
anova(fit.un)
##Unstructured
##adjust for birth
fit.un.adj <-gls(weight ~ birth+Diet * Time, data = train1,
corr = corSymm(form= ~ 1|Chick),
weights=varIdent(form=~1|Time))
anova(fit.un.adj)
##ar1
fit.ar <-gls(weight ~ Diet * Time, data = train1,
corr = corAR1(form= ~ 1|Chick),
weights=varIdent(form= ~1|Time))
summary(fit.ar)
anova(fit.ar)
##ar1
##adjust for birth
fit.ar.adj <-gls(weight ~ birth+Diet * Time, data = train1,
corr = corAR1(form= ~ 1|Chick),
weights=varIdent(form= ~1|Time))
anova(fit.ar.adj)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj)
anova(fit.cs.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj)
anova(fit.cs.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj)
anova(fit.cs.adj,fit.ar)
anova(fit.cs,fit.un)
anova(fit.cs,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar.adj)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar.adj)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar)
anova(fit.cs.adj,fit.un.adj,fit.ar.adj)
hist(resid(fit.un.adj))
qqnorm(resid(fit.un.adj))
ncvTest(resid(fit.un.adj))
hist(resid(fit.un.adj))
qqnorm(resid(fit.un.adj))
ncvTest(fit.un.adj)
hist(resid(fit.un.adj))
qqnorm(resid(fit.un.adj))
bartlett.test(fit.un.adj)
plot(resid(fit.un.adj))
install.packages("het.test")
library(het.test)
whites.htest(fit.un.adj)
hist(resid(fit.un.adj))
qqnorm(resid(fit.un.adj))
plot(resid(fit.un.adj))
durbinWatsonTest(fit.un.adj)
durbinWatsonTest(resid(fit.un.adj))
resid(fit.un.adj)
durbinWatsonTest(resid(fit.un.adj))
durbinWatsonTest(as.vector(resid(fit.un.adj)))
sex<-rep(1,392)
sex<-rep(0,392)
sex<-rep(0,392)
sex[190:392]<-1
sex[190:392]
dataframe<-data.frame(1,392:3)
dataframe<-data.frame(1:392,1,1,1)
View(dataframe)
View(dataframe)
View(dataframe)
dataframe<-data.frame(1:392,1,1,1,row.names = c("id","sex","Mental Health","Education Level"))
dataframe<-data.frame(1:392,1,1,1,row.names = c("id","sex","Mental Health","Education Level"))
dataframe<-data.frame(1:392,1,1,1)
colnames(dataframe)<-c("id","sex","Mental Health","Education Level")
View(dataframe)
dataframe<-data.frame(1:392,1,1,1)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
View(dataframe)
dataframe$Sex[1:189]<-0
dataframe$`Mental Health`[1:131]<-1
dataframe$Sex[1:189]
dataframe$`Mental Health`[190:303]<-1
View(dataframe)
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[-1:189]<-0
dataframe$Sex[190:392]<-0
View(dataframe)
View(dataframe)
dataframe$Sex[190:392]<-1
dataframe$`Mental Health`[1:131]<-1
dataframe$`Mental Health`[190:303]<-1
dataframe$`Education Level`[1:71]<-1
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Mental Health`[1:131]<-1
dataframe$`Mental Health`[190:303]<-1
dataframe$`Education Level`[1:71]<-1
dataframe$`Education Level`[72:125]<-2
dataframe$`Education Level`[126:189]<-3
dataframe$`Education Level`[190:276]<-1
dataframe$`Education Level`[277:335]<-2
dataframe$`Education Level`[336:392]<-3
View(dataframe)
dataframe[Sex=0]
dataframe[which(dataframe$Sex=0)]
dataframe[which(dataframe$Sex==0)]
dataframe[which(dataframe$Sex==0)]
dataframe[which(dataframe$Sex==0),]
dataframe[which(dataframe$Sex==0)|which(dataframe$`Education Level`==1),]
dataframe[which(dataframe$Sex==0)&which(dataframe$`Education Level`==1),]
dataframe[which(dataframe$Sex==0 & dataframe$`Education Level`==1),]
dataframe[which(dataframe$Sex==0 & dataframe$`Education Level`==1&dataframe$`Mental Health`==1),]
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Mental Health`[1:131]<-1
dataframe$`Mental Health`[190:303]<-1
dataframe$`Education Level`[1:71]<-1
dataframe$`Education Level`[72:125]<-2
dataframe$`Education Level`[126:189]<-3
dataframe$`Education Level`[190:276]<-1
dataframe$`Education Level`[277:335]<-2
dataframe$`Education Level`[336:392]<-3
View(dataframe)
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Mental Health`[1:131]<-1
dataframe$`Mental Health`[190:303]<-1
dataframe$`Education Level`[1:71]<-1
dataframe$`Education Level`[72:125]<-2
dataframe$`Education Level`[126:189]<-3
dataframe$`Education Level`[190:276]<-1
dataframe$`Education Level`[277:335]<-2
dataframe$`Education Level`[336:392]<-3
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Education Level`[1:71]<-1
dataframe$`Education Level`[72:125]<-2
dataframe$`Education Level`[126:189]<-3
dataframe$`Education Level`[190:276]<-1
dataframe$`Education Level`[277:335]<-2
dataframe$`Education Level`[336:392]<-3
dataframe$`Mental Health`[c(19:71,92:125),]<-1
dataframe$`Mental Health`[r(19:71,92:125),]<-1
c(19:71,92:125)
dataframe$`Mental Health`[c(19:71,92:125),]
dataframe$`Mental Health`[c(19:71,92:125)]
dataframe$`Mental Health`[c(19:71,92:125,146:189,222:276,302:335,363:392)]<-1
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Education Level`[1:71]<-1
dataframe$`Education Level`[72:125]<-2
dataframe$`Education Level`[126:189]<-3
dataframe$`Education Level`[190:276]<-1
dataframe$`Education Level`[277:335]<-2
dataframe$`Education Level`[336:392]<-3
dataframe$`Mental Health`[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
View(dataframe)
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Education Level`[c(72:189,277:392)]<-1
dataframe$`Mental Health`[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Education Level`[c(72:189,277:392)]<-1
dataframe$`Mental Health`[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
View(dataframe)
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental Health","Education Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$`Education Level`[c(72:189,277:392)]<-1
dataframe$`Mental Health`[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
dataframe$Sex<-as.factor(dataframe$Sex)
dataframe$`Mental Health`<-as.factor(dataframe$`Mental Health`)
dataframe$`Education Level`<-as.factor(dataframe$`Education Level`)
##Male=0,Female=1
##Normal=0, Others=1
##No college degree=0, Others=1
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental_Health","Education_Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$Education_Level[c(72:189,277:392)]<-1
dataframe$Mental_Health[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
dataframe$Sex<-as.factor(dataframe$Sex)
dataframe$Mental_Health<-as.factor(dataframe$Mental_Health)
dataframe$Education_Level<-as.factor(dataframe$Education Level)
##Male=0,Female=1
##Normal=0, Others=1
##No college degree=0, Others=1
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental_Health","Education_Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$Education_Level[c(72:189,277:392)]<-1
dataframe$Mental_Health[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
dataframe$Sex<-as.factor(dataframe$Sex)
dataframe$Mental_Health<-as.factor(dataframe$Mental_Health)
dataframe$Education_Level<-as.factor(dataframe$Education_Level)
##Male=0,Female=1
##Normal=0, Others=1
##No college degree=0, Others=1
dataframe<-data.frame(1:392,0,0,0)
colnames(dataframe)<-c("id","Sex","Mental_Health","Education_Level")
dataframe<-dataframe[,2:4]
dataframe$Sex[190:392]<-1
dataframe$Education_Level[c(72:189,277:392)]<-1
dataframe$Mental_Health[c(1:18,72:91,126:145,190:221,277:301,336:362)]<-1
dataframe$Sex<-as.factor(dataframe$Sex)
dataframe$Mental_Health<-as.factor(dataframe$Mental_Health)
dataframe$Education_Level<-as.factor(dataframe$Education_Level)
library(LDAvisData)
data(reviews, package = "LDAvisData")
data(package = "LDAvisData")
data(reviews, package = "LDAvisData")
library(LDAvis)
library(lda)
library(NLP)
library(tm)
remove.packages("tm")
install.packages("tm")
install.packages("tm",dependencies=TRUE)
library(tm)
library(LDAvisData)
install.packages("devtools")
devtools::install_github("cpsievert/LDAvisData")
data(reviews, package = "LDAvisData")
library(LDAvisData)
library(NLP)
install.packages("NLP")
install.packages("tm")
library(lda)
install.packages("lda")
install.packages("LDAvis")
library(NLP)
library(tm)
library(lda)
library(LDAvis)
stop_words <- stopwords("SMART")
reviews <- gsub("'", "", reviews)  # remove apostrophes
reviews <- gsub("[[:punct:]]", " ", reviews)  # replace punctuation with space
reviews <- gsub("[[:cntrl:]]", " ", reviews)  # replace control characters with space
reviews <- gsub("^[[:space:]]+", "", reviews) # remove whitespace at beginning of documents
reviews <- gsub("[[:space:]]+$", "", reviews) # remove whitespace at end of documents
reviews <- tolower(reviews)  # force to lowercase
doc.list <- strsplit(reviews, "[[:space:]]+")
term.table <- sort(term.table, decreasing = TRUE)
length(doc.list)       # Length: number of documents
length(doc.list[[1]])  # A splited string of words
term.table <- table(unlist(doc.list))
term.table <- sort(term.table, decreasing = TRUE)
head(term.table)      # Just to give an idea of how it looks like
del <- names(term.table) %in% stop_words | term.table < 5
term.table <- term.table[!del]
vocab <- names(term.table)           # Vocab: a vector of all words
get.terms <- function(x) {
index <- match(x, vocab)
index <- index[!is.na(index)]
rbind(as.integer(index-1), as.integer(rep(1, length(index))))
}
documents <- lapply(doc.list, get.terms)
documents[1]
D <- length(documents)  # number of documents (2,000)
W <- length(vocab)  # number of terms in the vocab (14,568)
doc.length <- sapply(documents, function(x) sum(x[2, ]))  # number of tokens per document [312, 288, 170, 436, 291, ...]
N <- sum(doc.length)  # total number of tokens in the data (546,827)
term.frequency <- as.integer(term.table)
documents
dim(documents)
documents[1]
dim(documents[1])
load("lyr.Rdata")
setwd("~/Documents/ads/proj4/Fall2016-proj4-yunyizh/data")
load("lyr.Rdata")
col<-c(2,3,6:30)
lyr<-lyr[-col]
lyr.list<-split(lyr,seq(nrow(lyr)))
documents[1]
lyr
View(lyr)
lyr.list <- as.list(as.data.frame(lyr))
lyr.list <- as.list(as.data.frame(t(lyr)))
lyr.list<-split(lyr,seq(nrow(lyr[,-1])))
lyr.list <- as.list(as.data.frame(t(lyr[,-1])))
lyr.list[1]
lyrfreq<-lyr[,which(colSums(lyr)>5)]
which(colSums(lyr[,-1])>5)
lyrfreq<-lyr[,which(colSums(lyr[,-1])>5)+1]
View(lyrfreq)
sum<-colSums(lyrfreq)
sum
View(lyrfreq)
lyrfreq.list <- as.list(as.data.frame(t(lyrfreq)))
lyr.list[1]
lyrfreq.list[1]
lyrfreq.list[1]
length(lyr.freq)
length(lyrfreq.list)
lyrfreq
dim(lyrfreq)
list<-rep(1,3939)
list<-as.list(rep(1,3939))
mapply(c, lyrfreq.list, list, SIMPLIFY=FALSE)
topicvocab<-mapply(c, lyrfreq.list, list, SIMPLIFY=FALSE)
list<-as.list(rep(1,2350))
topicvocab<-mapply(c, lyrfreq.list, list, SIMPLIFY=FALSE)
topicvocab<-mapply(r, lyrfreq.list, list, SIMPLIFY=FALSE)
dim(lyrfreq)
list<-as.list(matrix(1,2350,3939))
list<-as.list(as.data.frame(t(matrix(1,2350,3939)))
list<-as.list(as.data.frame(t(matrix(1,2350,3939))))
list<-as.list(as.data.frame(t(matrix(1,2350,3939))))
topicvocab<-mapply(c, lyrfreq.list, list, SIMPLIFY=FALSE)
topicvocab<-mapply(r, lyrfreq.list, list, SIMPLIFY=FALSE)
topicvocab<-apply(cbind(lyrfreq.list, list),1,function(x) unname(unlist(x)))
install.packages("RCurl")
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
mergr.list(lyrfreq.list,list)
topicvocab<-merge.list(lyrfreq.list,list)
lyrfreq
topicvocab<-data.frame(matrix(1,7878,2350))
for (i in 1:3939){
topicvocab[2i-1,]<-t(lyrfreq[,i])
topicvocab[2i,]<-rep(1,2350)
}
lyrfreq[,i]
t(lyrfreq)[i,]
topicvocab[2i-1,]<-t(lyrfreq)[i,]
topicvocab[2*i-1,]<-t(lyrfreq)[i,]
View(topicvocab)
for (i in 1:3939){
topicvocab[2*i-1,]<-t(lyrfreq)[i,]
}
View(topicvocab)
for (i in 1:3939){
topicvocab[2*i-1,]<-t(lyrfreq)[i,]
print(i)
}
topicvocab<-as.list(data.frame(matrix(1,3939,2350)))
list1<-as.list([t(lyrfreq)[i,])
list1<-as.list(t(lyrfreq)[i,])
list2<-as.list(rep(1,2350))
merge.list(list1,list2)
topicvocab[i]<-merge.list(list1,list2)
list1<-as.list(t(lyrfreq)[i,])
t(lyrfreq)[i,]
list1<-as.list(t(lyrfreq)[i,])
View(lyrfreq)
lyrfreq[i,]
lyrfreq[,i]
list1<-as.list(lyrfreq[,i])
topicvocab[i]
topicvocab[i,]
topicvocab[2]
topicvocab<-as.list(data.frame(matrix(1,3939,2350)))
list1<-as.list(lyrfreq[,i])
list2<-as.list(rep(1,2350))
topicvocab[i]<-merge.list(list1,list2)
merge.list(list1,list2)
topicvocab<-merge.list(list1,list2)
topicvocab<-mapply(c, first, second, SIMPLIFY=FALSE)
topicvocab<-mapply(c, list1, list2, SIMPLIFY=FALSE)
topicvocab<-as.list(data.frame(matrix(1,3939,2350)))
topicvocab[i]<-mapply(c, list1, list2, SIMPLIFY=FALSE)
topicvocab<-as.list(data.frame(matrix(1,3939,2350)))
topicvocab[i]
topicvocab<-as.list()
topicvocab<-list()
topicvocab[1]<-mapply(c, list1, list2, SIMPLIFY=FALSE)
topicvocab[1]
mapply(c, list1, list2, SIMPLIFY=FALSE)
topicvocab<-mapply(c, list1, list2, SIMPLIFY=FALSE)
dataframe<-rbind(lyrfreq[,i],rep(1,2350))
View(dataframe)
list<-as.list(data.frame)
list<-as.list(dataframe)
list<-list(dataframe)
topicvocab<-list()
topicvocab[i]<-list
topicvocab[1]<-list
topicvocab[1]
i=1
lyrfreq[,i]
lyrfreq[i,]
lyrfreq[,i]
lyrfreq[i,]
lyrfreq[2,]
col<-c(2,3,6:30)
lyr<-lyr[-col]
lyr
lyrfreq<-lyr[,which(colSums(lyr[,-1])>5)+1]
setwd("~/Documents/ads/proj4/Fall2016-proj4-yunyizh/data")
load("lyr.Rdata")
col<-c(2,3,6:30)
lyr<-lyr[-col]
lyrfreq<-lyr[,which(colSums(lyr[,-1])>5)+1]
lyrfreq[2,]
dim(lyrfreq)
class(lyrfreq)
lyrfreq[1,1]
lyrfreq[1,]
lyr[1,]
lyr[,1]
load("lyr.Rdata")
